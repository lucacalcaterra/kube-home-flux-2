---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 13.5.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m

  values:
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${CONFIG_NFS_SERVER_ADDRESS}
            path: ${CONFIG_NFS_KUBEDATA_PATH}/downloads/torrents
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${CONFIG_NFS_SERVER_ADDRESS}
            path: ${CONFIG_NFS_KUBEDATA_PATH}/media
    # service:
    #   bittorrent:
    #     enabled: true
    #     annotations:
    #       prometheus.io/probe: "true"
    #       prometheus.io/protocol: tcp
    #     type: LoadBalancer
    #     externalIPs:
    #       - ${CONFIG_LB_IP_QBITTORRENT}
    #     ports:
    #       bittorrent:
    #         port: 50413
    #         name: bittorrent
    #         protocol: TCP
    #         targetPort: 6881
    #     externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "weather-sunset"
          #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: "qbittorrent.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "qbittorrent.${SECRET_DOMAIN}"
            secretName: "qbittorrent-tls"
    podAnnotations:
      backup.velero.io/backup-volumes: config
